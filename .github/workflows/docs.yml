name: Deploy Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  # For nektos/act to work (local testing)
  IS_LOCAL: "${{ secrets.IS_LOCAL == 'true' }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: For act to work (local testing)
        if: ${{ env.IS_LOCAL == 'true' }}
        run: npm -g install yarn

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build library
        run: yarn build

      - name: Generate API documentation
        run: yarn docs:build

      - name: Get package version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Copy examples for CDN
        run: |
          mkdir -p docs-site/examples
          cp -r examples/* docs-site/examples/

          # Convert local imports to CDN imports in example files
          find docs-site/examples -name "*.html" -exec sed -i 's|import.*from.*rembg-web.*|import { remove, newSession } from "https://unpkg.com/@bunnio/rembg-web@latest/dist/index.js";|g' {} \;

          # Update model paths to use GitHub Releases with dynamic version
          find docs-site/examples -name "*.html" -exec sed -i "s|/models/|https://github.com/boldizsar-pal/rembg-web/releases/download/v${{ steps.version.outputs.version }}/|g" {} \;

          # Update base URL configuration in examples to use GitHub releases
          find docs-site/examples -name "*.html" -exec sed -i "s|https://github.com/bunn-io/rembg-web/releases/download/base-models|https://github.com/boldizsar-pal/rembg-web/releases/download/v${{ steps.version.outputs.version }}|g" {} \;

      - name: Build documentation pages
        run: yarn docs:build-pages

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs-site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
